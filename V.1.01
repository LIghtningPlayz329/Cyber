 Initialize variables
local isKillauraOn = false
local orbitConnection = nil
local args = {
    [1] = 1,
    [2] = nil -- Initialize with nil, will be updated later
}

-- Handle the click event
clickDetector.MouseButton1Click:Connect(function()
    if isKillauraOn then
        textLabel.Text = "Teleport Aura: Off"
        isKillauraOn = false
        -- Remove the orbit update function when turning off
        if orbitConnection then
            orbitConnection:Disconnect()
            orbitConnection = nil
        end
    else
        textLabel.Text = "Teleport Aura: On"
        isKillauraOn = true
        -- Execute the desired script when text is "Teleport Aura: On"
        print("Killaura is now ON")  -- Placeholder for the actual script

        -- Add the orbit functionality
        local Players = game:GetService("Players")
        local localPlayer = Players.LocalPlayer
        local character = localPlayer.Character
        local humanoidRootPart = character.HumanoidRootPart
        local RunService = game:GetService("RunService")

        local function updateOrbit()
            -- Find the nearest living player within range
            local nearestPlayer = nil
            local nearestDistance = math.huge
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    local character = player.Character
                    if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 then
                        local distance = (character.HumanoidRootPart.Position - humanoidRootPart.Position).magnitude
                        if distance <= 19 and distance < nearestDistance then
                            nearestDistance = distance
                            nearestPlayer = player
                        end
                    end
                end
            end

            -- Orbit the nearest living player within range
            if nearestPlayer then
                local nearestCharacter = nearestPlayer.Character
                local nearestHumanoidRootPart = nearestCharacter.HumanoidRootPart
                local orbitPosition = nearestHumanoidRootPart.Position + Vector3.new(0, 10, 0) -- increased height by a lot
                local orbitRadius = 6 -- adjust the radius here
                local orbitSpeed = 18 -- increased spin speed

                local angle = tick() * orbitSpeed
                local x = math.cos(angle) * orbitRadius
                local z = math.sin(angle) * orbitRadius
                humanoidRootPart.CFrame = CFrame.new(orbitPosition + Vector3.new(x, 0, z))
            end
        end

        -- Connect the updateOrbit function to Heartbeat
        orbitConnection = RunService.Heartbeat:Connect(updateOrbit)

        -- Start the additional script functionality
        coroutine.wrap(function()
            while isKillauraOn do
                -- Find the nearest player within range
                local nearestPlayer = nil
                local nearestDistance = math.huge
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= localPlayer then
                        local character = player.Character
                        if character then
                            local distance = (character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude
                            if distance <= 13 and distance < nearestDistance then
                                nearestDistance = distance
                                nearestPlayer = player
                            end
                        end
                    end
                end

                -- Update the args table with the nearest player if within range
                if nearestPlayer then
                    args[2] = nearestPlayer
                else
                    args[2] = nil
                end

                -- Fire the remote event with the updated args
                game:GetService("ReplicatedStorage").remoteInterface.interactions.meleePlayer:FireServer(unpack(args))

                -- Wait for 0.1 seconds before checking again
                wait(0.1)
            end
        end)()
    end
end)
-- Create a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CombinedGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Function to create a button and frame
local function createButton(position, text, clickHandler)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.1, 0, 0.05, 0)  -- Size (10% width, 5% height)
    frame.Position = position  -- Position provided by the function argument
    frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)  -- White color
    frame.Parent = screenGui

    -- Add rounded corners
    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0.2, 0)  -- Rounded corners
    uicorner.Parent = frame

    -- Create a TextLabel for the text
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)  -- Fill the entire frame
    textLabel.BackgroundTransparency = 1  -- Make the background transparent
    textLabel.Text = text
    textLabel.TextColor3 = Color3.fromRGB(0, 0, 0)  -- Black text
    textLabel.Font = Enum.Font.SourceSans  -- Default Roblox font
    textLabel.TextScaled = true  -- Scale text to fit the label
    textLabel.Parent = frame

    -- Add a TextButton to detect clicks
    local clickDetector = Instance.new("TextButton")
    clickDetector.Size = UDim2.new(1, 0, 1, 0)  -- Fill the entire frame
    clickDetector.BackgroundTransparency = 1  -- Make the background transparent
    clickDetector.Text = ""  -- No text on the button
    clickDetector.Parent = frame

    clickDetector.MouseButton1Click:Connect(function()
        clickHandler(textLabel)
    end)
end

-- Variables for Teleport Aura
local isTeleportAuraOn = false
local teleportOrbitConnection = nil

-- Variables for Killaura
local isKillauraOn = false

-- Teleport Aura click handler
local function handleTeleportAuraClick(textLabel)
    if isTeleportAuraOn then
        textLabel.Text = "Teleport Aura: Off"
        isTeleportAuraOn = false
        if teleportOrbitConnection then
            teleportOrbitConnection:Disconnect()
            teleportOrbitConnection = nil
        end
    else
        textLabel.Text = "Teleport Aura: On"
        isTeleportAuraOn = true

        -- Start the orbit functionality
        local Players = game:GetService("Players")
        local localPlayer = Players.LocalPlayer
        local character = localPlayer.Character
        local humanoidRootPart = character.HumanoidRootPart
        local RunService = game:GetService("RunService")

        local function updateOrbit()
            local nearestPlayer = nil
            local nearestDistance = math.huge
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    local character = player.Character
                    if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 then
                        local distance = (character.HumanoidRootPart.Position - humanoidRootPart.Position).magnitude
                        if distance <= 19 and distance < nearestDistance then
                            nearestDistance = distance
                            nearestPlayer = player
                        end
                    end
                end
            end

            if nearestPlayer then
                local nearestCharacter = nearestPlayer.Character
                local nearestHumanoidRootPart = nearestCharacter.HumanoidRootPart
                local orbitPosition = nearestHumanoidRootPart.Position + Vector3.new(0, 10, 0)
                local orbitRadius = 5
                local orbitSpeed = 24

                local angle = tick() * orbitSpeed
                local x = math.cos(angle) * orbitRadius
                local z = math.sin(angle) * orbitRadius
                humanoidRootPart.CFrame = CFrame.new(orbitPosition + Vector3.new(x, 0, z))
            end
        end

        teleportOrbitConnection = RunService.Heartbeat:Connect(updateOrbit)
    end
end

-- Killaura click handler
local function handleKillauraClick(textLabel)
    if isKillauraOn then
        textLabel.Text = "Killaura: Off"
        isKillauraOn = false
    else
        textLabel.Text = "Killaura: On"
        isKillauraOn = true

        coroutine.wrap(function()
            while isKillauraOn do
                local Players = game:GetService("Players")
                local localPlayer = Players.LocalPlayer

                local nearestPlayer = nil
                local nearestDistance = math.huge
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= localPlayer then
                        local character = player.Character
                        if character then
                            local distance = (character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude
                            if distance <= 19 and distance < nearestDistance then
                                nearestDistance = distance
                                nearestPlayer = player
                            end
                        end
                    end
                end

                local args = {
                    [1] = 1,
                    [2] = nearestPlayer
                }

                game:GetService("ReplicatedStorage").remoteInterface.interactions.meleePlayer:FireServer(unpack(args))
                wait(0.1)
            end
        end)()
    end
end

-- Create the buttons for Teleport Aura and Killaura
createButton(UDim2.new(0.01, 0, 0.01, 0), "Teleport Aura: Off", handleTeleportAuraClick)
createButton(UDim2.new(0.01, 0, 0.07, 0), "Killaura: Off", handleKillauraClick)
